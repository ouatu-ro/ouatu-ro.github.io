---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import fs from 'node:fs';
import path from 'node:path';
import { slugify } from '../utils/slugify';

// Define Project interface
interface Project {
  name: string;
  homepage: string;
  description: string;
  githubUrl: string | null;
  slug?: string;
}

// Helper function to read projects data
function readProjectsData(): Project[] {
  try {
    const projectsFilePath = path.join(process.cwd(), 'public', 'projects-data.json');
    if (fs.existsSync(projectsFilePath)) {
      const data = JSON.parse(fs.readFileSync(projectsFilePath, 'utf8'));
      return data.projects || [];
    }
  } catch (error) {
    console.warn('Could not read projects-data.json:', error);
  }
  
  // Try reading manual projects as fallback
  try {
    const manualProjectsPath = path.join(process.cwd(), 'public', 'manual-projects-data.json');
    if (fs.existsSync(manualProjectsPath)) {
      const data = JSON.parse(fs.readFileSync(manualProjectsPath, 'utf8'));
      return data.manualProjects || [];
    }
  } catch (error) {
    console.warn('Could not read manual-projects-data.json:', error);
  }
  
  // Fallback to default project if nothing else is available
  return [
    {
      name: 'Verbalate',
      homepage: 'https://verbalate.ai/',
      description: 'Project for Audio-Visual translation with support for voice cloning and AI lip-sync. For professionals and amateurs alike.',
      githubUrl: null
    }
  ];
}

// Get projects at build time
const projects = readProjectsData().map(project => ({
  ...project,
  slug: project.slug || slugify(project.name)
}));

---
<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <!-- Add Font Awesome for the info icon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Include slugify script before main.js -->
    <script is:inline src="/scripts/slugify.js"></script>
  </head>
  <body>
    <Header />

    <!-- Tooltip element for JS interactions -->
    <div id="tooltip"></div>
    <main>
      <section id="about" class="bg-primary">
        <h2>About Me</h2>
        <p>
          I'm Bogdan Ouatu and I focus on building innovative software and exploring new technologies.
          Currently, I'm exploring ML for audio-visual generation, translation, durable execution, reactive programming,
          and making collaborative products (similar to tools like Figma or Google Docs). Feel free to contact me if you're interested in discussing any of these topics.
        </p>
      </section>

      <section id="projects">
        <h2>Projects</h2>
        <p>
          Here are some fully fledged products or proofs-of-concept I built. Most of the list is generated dynamically from my GitHub repositories.
        </p>
        <ul id="projects-list">
          {projects.map((project) => (
            <li>
              <div class="project-link-wrapper">
                <a href={`/project/${project.slug}`}>{project.name}</a>
                {project.description && (
                  <button class="info-btn" aria-label="Show project description">
                    <i class="fas fa-info-circle"></i>
                  </button>
                )}
              </div>
              {project.description && (
                <div class="project-description">{project.description}</div>
              )}
            </li>
          ))}
        </ul>
      </section>

      <section id="contact">
        <h2>Contact Me Now</h2>
        <p>Email: bogdan *@* ouatu.ro</p>
      </section>
    </main>

    <Footer />

    <!-- Custom JS for tooltips and UI interactions -->
    <script type="module" src="/scripts/main.js"></script>
  </body>
</html>
