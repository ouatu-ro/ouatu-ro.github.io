---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Icon from '../components/Icons.astro';
import { SITE_TITLE, SITE_DESCRIPTION, CONTACT_EMAIL } from '../consts';
import fs from 'node:fs';
import path from 'node:path';
import { slugify } from '../utils/slugify';
import ClientScripts from '../components/ClientScripts.astro';

// Define Project interface
interface Project {
  name: string;
  homepage: string;
  description: string;
  githubUrl: string | null;
  slug?: string;
}

// Helper function to read projects data
function readProjectsData(): Project[] {
  try {
    const projectsFilePath = path.join(process.cwd(), 'public', 'projects-data.json');
    if (fs.existsSync(projectsFilePath)) {
      const data = JSON.parse(fs.readFileSync(projectsFilePath, 'utf8'));
      return data.projects || [];
    }
    console.warn('projects-data.json does not exist, trying manual projects');
  } catch (error) {
    console.warn('Could not read projects-data.json:', error);
  }
  
  // Try reading manual projects as fallback
  try {
    const manualProjectsPath = path.join(process.cwd(), 'public', 'manual-projects-data.json');
    if (fs.existsSync(manualProjectsPath)) {
      const data = JSON.parse(fs.readFileSync(manualProjectsPath, 'utf8'));
      return data.manualProjects || [];
    }
    console.warn('manual-projects-data.json does not exist');
  } catch (error) {
    console.warn('Could not read manual-projects-data.json:', error);
  }
  
  // If nothing found, return empty array
  console.error('No projects found! Please ensure the GitHub Action has generated the projects-data.json file.');
  return [];
}

// Get projects at build time
const projects = readProjectsData().map(project => ({
  ...project,
  slug: project.slug || slugify(project.name)
}));

console.log(`Loaded ${projects.length} projects for the homepage`);

---
<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ClientScripts />
  </head>
  <body>
    <Header />

    <!-- Tooltip element for JS interactions -->
    <div id="tooltip"></div>
    <main>
      <section id="about" class="bg-primary">
        <h2 class="heading-font">About Me</h2>
        <p class="body-font">
          Currently, I'm exploring ML for audio-visual content generation, translation, durable execution, reactive programming, and collaborative products (similar to tools like Figma or Google Docs). Feel free to reach out if you'd like to discuss these topics.
        </p>
      </section>

      <section id="projects">
        <h2>Projects <a href="/projects-rss.xml" class="rss-link" title="Projects RSS Feed"><Icon name="rss" /></a></h2>
        <p>
          Here are some fully fledged products and proofs-of-concept I built. This list is dynamically generated from my GitHub repositories directly into this website.
        </p>
        <ul id="projects-list">
          {projects.length > 0 ? (
            projects.map((project) => (
              <li>
                <div class="project-link-wrapper">
                  <a href={`/project/${project.slug}`}>{project.name}</a>
                  {project.description && (
                    <button class="info-btn" aria-label="Show project description">
                      <Icon name="info-circle" />
                    </button>
                  )}
                </div>
                {project.description && (
                  <div class="project-description">{project.description}</div>
                )}
              </li>
            ))
          ) : (
            <li class="no-projects-message">
              <p>Projects are currently being updated. Please check back soon!</p>
            </li>
          )}
        </ul>
      </section>

      <section id="contact">
        <h2>Get in touch</h2>
        <p>Email: {CONTACT_EMAIL.replace('@', ' *@* ')}</p>
      </section>
    </main>

    <Footer />

    <!-- SEO footer with direct project links - rendered server-side -->
    <div class="seo-footer">
      <div class="container">
        <h3>Explore Projects</h3>
        <div class="project-links">
          {projects.map((project) => (
            <a href={project.homepage} class="project-direct-link" target="_blank" rel="noopener">
              {project.name}
            </a>
          ))}
        </div>
      </div>
    </div>

    <style>
      .seo-footer {
        background-color: #232323;
        padding: 1rem 0 2rem;
        margin-top: -2rem;
        font-size: 0.9rem;
        text-align: center;
      }
      .seo-footer h3 {
        font-size: 1rem;
        margin-bottom: 0.5rem;
        color: #ffffff;
      }
      .project-links {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
      }
      .project-direct-link {
        color: #aaa;
        text-decoration: none;
      }
      .project-direct-link:hover {
        color: #fff;
        text-decoration: underline;
      }
    </style>
  </body>
</html>
